{"ast":null,"code":"var _jsxFileName = \"/home/johnm/phase-3-project-sinatra-react/frontend/src/components/DirectorPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport MovieCard from './MovieCard';\nimport NewMovie from './NewMovie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DirectorsPage(_ref) {\n  _s();\n  let {\n    directors,\n    onMovieEdit,\n    onMovieDelete,\n    onAddItem\n  } = _ref;\n  const [movies, setMovies] = useState([]);\n  function handleNewMovie(newMovie) {\n    setMovies([...movies, newMovie]);\n  }\n  function handleDeleteMovie(id) {\n    const updatedMovies = movies.filter(movie => movie.id !== id);\n    setMovies(updatedMovies);\n  }\n  function handleEditedMovies(updatedMovieObj) {\n    const updatedMovies = movies.map(movie => {\n      if (movie.id === updatedMovieObj.id) {\n        return updatedMovieObj;\n      } else {\n        return movie;\n      }\n    });\n    setMovies(updatedMovies);\n  }\n  const getDirectors = directors.map(director => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: director.name\n      }, director.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(NewMovie, {\n        onAddItem: handleNewMovie\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this), director.movies.map(movie => {\n        return /*#__PURE__*/_jsxDEV(MovieCard, {\n          id: movie.id,\n          name: movie.name,\n          runtime: movie.runtime,\n          genre: movie.genre,\n          imageUrl: movie.imageUrl,\n          onMovieDelete: onMovieDelete,\n          onMovieEdit: onMovieEdit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 32\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 16\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Directors\", getDirectors]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n_s(DirectorsPage, \"m6SRVq9N0POigGpMlnh/6woD7xI=\");\n_c = DirectorsPage;\nexport default DirectorsPage;\nvar _c;\n$RefreshReg$(_c, \"DirectorsPage\");","map":{"version":3,"names":["React","useState","useEffect","MovieCard","NewMovie","DirectorsPage","directors","onMovieEdit","onMovieDelete","onAddItem","movies","setMovies","handleNewMovie","newMovie","handleDeleteMovie","id","updatedMovies","filter","movie","handleEditedMovies","updatedMovieObj","map","getDirectors","director","name","runtime","genre","imageUrl"],"sources":["/home/johnm/phase-3-project-sinatra-react/frontend/src/components/DirectorPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport MovieCard from './MovieCard';\nimport NewMovie from './NewMovie';\n\nfunction DirectorsPage({ directors, onMovieEdit, onMovieDelete, onAddItem }) {\n    const [movies, setMovies] = useState([]);\n\n    function handleNewMovie(newMovie) {\n        setMovies([...movies, newMovie])\n      }\n\n      function handleDeleteMovie(id) {\n        const updatedMovies = movies.filter((movie) => movie.id !== id);\n        setMovies(updatedMovies);\n      }\n      \n      function handleEditedMovies(updatedMovieObj) {\n        const updatedMovies = movies.map((movie) => {\n          if (movie.id === updatedMovieObj.id) {\n            return updatedMovieObj;\n          } else {\n            return movie;\n          }\n        });\n        setMovies(updatedMovies);\n      }\n\n    const getDirectors = directors.map((director) => {\n        return <div>\n                    <h1 key={director.id}>{director.name}</h1>\n                    <NewMovie onAddItem={handleNewMovie} />\n                    {director.movies.map((movie) => {\n                        return <MovieCard \n                               id={movie.id}\n                               name={movie.name}\n                               runtime={movie.runtime}\n                               genre={movie.genre}\n                               imageUrl={movie.imageUrl}\n                               onMovieDelete={onMovieDelete}\n                               onMovieEdit={onMovieEdit}\n                        />\n                    })}\n               </div>\n    })\n    return (\n        <div>\n            Directors\n            {getDirectors}\n        </div>\n    )\n}\n\nexport default DirectorsPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,QAAQ,MAAM,YAAY;AAAC;AAElC,SAASC,aAAa,OAAuD;EAAA;EAAA,IAAtD;IAAEC,SAAS;IAAEC,WAAW;IAAEC,aAAa;IAAEC;EAAU,CAAC;EACvE,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAExC,SAASW,cAAc,CAACC,QAAQ,EAAE;IAC9BF,SAAS,CAAC,CAAC,GAAGD,MAAM,EAAEG,QAAQ,CAAC,CAAC;EAClC;EAEA,SAASC,iBAAiB,CAACC,EAAE,EAAE;IAC7B,MAAMC,aAAa,GAAGN,MAAM,CAACO,MAAM,CAAEC,KAAK,IAAKA,KAAK,CAACH,EAAE,KAAKA,EAAE,CAAC;IAC/DJ,SAAS,CAACK,aAAa,CAAC;EAC1B;EAEA,SAASG,kBAAkB,CAACC,eAAe,EAAE;IAC3C,MAAMJ,aAAa,GAAGN,MAAM,CAACW,GAAG,CAAEH,KAAK,IAAK;MAC1C,IAAIA,KAAK,CAACH,EAAE,KAAKK,eAAe,CAACL,EAAE,EAAE;QACnC,OAAOK,eAAe;MACxB,CAAC,MAAM;QACL,OAAOF,KAAK;MACd;IACF,CAAC,CAAC;IACFP,SAAS,CAACK,aAAa,CAAC;EAC1B;EAEF,MAAMM,YAAY,GAAGhB,SAAS,CAACe,GAAG,CAAEE,QAAQ,IAAK;IAC7C,oBAAO;MAAA,wBACK;QAAA,UAAuBA,QAAQ,CAACC;MAAI,GAA3BD,QAAQ,CAACR,EAAE;QAAA;QAAA;QAAA;MAAA,QAAsB,eAC1C,QAAC,QAAQ;QAAC,SAAS,EAAEH;MAAe;QAAA;QAAA;QAAA;MAAA,QAAG,EACtCW,QAAQ,CAACb,MAAM,CAACW,GAAG,CAAEH,KAAK,IAAK;QAC5B,oBAAO,QAAC,SAAS;UACV,EAAE,EAAEA,KAAK,CAACH,EAAG;UACb,IAAI,EAAEG,KAAK,CAACM,IAAK;UACjB,OAAO,EAAEN,KAAK,CAACO,OAAQ;UACvB,KAAK,EAAEP,KAAK,CAACQ,KAAM;UACnB,QAAQ,EAAER,KAAK,CAACS,QAAS;UACzB,aAAa,EAAEnB,aAAc;UAC7B,WAAW,EAAED;QAAY;UAAA;UAAA;UAAA;QAAA,QAC9B;MACN,CAAC,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QACD;EACjB,CAAC,CAAC;EACF,oBACI;IAAA,wBAEKe,YAAY;EAAA;IAAA;IAAA;IAAA;EAAA,QACX;AAEd;AAAC,GA9CQjB,aAAa;AAAA,KAAbA,aAAa;AAgDtB,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}