{"ast":null,"code":"var _jsxFileName = \"/home/johnm/phase-3-project-sinatra-react/frontend/src/components/DirectorPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport MovieCard from './MovieCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DirectorPage(_ref) {\n  _s();\n  let {\n    directors,\n    onMovieDelete,\n    onMovieEdit\n  } = _ref;\n  const [selectedDirector, setSelectedDirector] = useState({\n    name: \"\",\n    movies: []\n  });\n  const params = useParams();\n  const movieCardStyle = {\n    backgroundColor: \"grey\",\n    padding: 80,\n    borderRadius: '5%',\n    textDecoration: 'none',\n    listStyle: 'none'\n  };\n  useEffect(() => {\n    const selectedDirector = directors.find(director => director.id === parseInt(params.id));\n    if (director) {\n      setSelectedDirector(director);\n    }\n  }, [directors]);\n  const getMovies = selectedDirector.movies.map(movie => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      style: movieCardStyle,\n      children: /*#__PURE__*/_jsxDEV(MovieCard, {\n        id: movie.id,\n        name: movie.name,\n        runtime: movie.runtime,\n        genre: movie.genre,\n        imageUrl: movie.imageUrl,\n        onMovieDelete: onMovieDelete,\n        onMovieEdit: onMovieEdit,\n        movie: movie\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 16\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [selectedDirector.name, \" Movies:\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: getMovies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_s(DirectorPage, \"Z5eEmJayvZiu+AttD/RBmiqgRzk=\", false, function () {\n  return [useParams];\n});\n_c = DirectorPage;\nexport default DirectorPage;\nvar _c;\n$RefreshReg$(_c, \"DirectorPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","MovieCard","DirectorPage","directors","onMovieDelete","onMovieEdit","selectedDirector","setSelectedDirector","name","movies","params","movieCardStyle","backgroundColor","padding","borderRadius","textDecoration","listStyle","find","director","id","parseInt","getMovies","map","movie","runtime","genre","imageUrl"],"sources":["/home/johnm/phase-3-project-sinatra-react/frontend/src/components/DirectorPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport MovieCard from './MovieCard';\n\nfunction DirectorPage({ directors, onMovieDelete, onMovieEdit }) {\n    const [selectedDirector, setSelectedDirector] = useState({\n        name: \"\",\n        movies: []\n    });\n    const params = useParams();\n\n    const movieCardStyle = {\n        backgroundColor: \"grey\",\n        padding: 80,\n        borderRadius: '5%',\n        textDecoration: 'none',\n        listStyle: 'none'\n    }\n\n    useEffect(() => {\n        const selectedDirector = directors.find((director) => director.id === parseInt(params.id))\n        if (director) {\n            setSelectedDirector(director)\n        }\n    }, [directors]);\n\n    const getMovies = selectedDirector.movies.map((movie) => {\n        return <div className=\"card\" style={movieCardStyle}>\n                    <MovieCard id={movie.id}\n                               name={movie.name}\n                               runtime={movie.runtime}\n                               genre={movie.genre}\n                               imageUrl={movie.imageUrl}\n                               onMovieDelete={onMovieDelete}\n                               onMovieEdit={onMovieEdit}\n                               movie={movie}\n                    />\n                </div>\n    })\n\n    return (\n        <div>\n            <h1>\n                {selectedDirector.name} Movies:\n            </h1>\n            <ul>\n                {getMovies}\n            </ul>\n        </div>\n    )\n}\n\nexport default DirectorPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,SAAS,MAAM,aAAa;AAAC;AAEpC,SAASC,YAAY,OAA4C;EAAA;EAAA,IAA3C;IAAEC,SAAS;IAAEC,aAAa;IAAEC;EAAY,CAAC;EAC3D,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGT,QAAQ,CAAC;IACrDU,IAAI,EAAE,EAAE;IACRC,MAAM,EAAE;EACZ,CAAC,CAAC;EACF,MAAMC,MAAM,GAAGV,SAAS,EAAE;EAE1B,MAAMW,cAAc,GAAG;IACnBC,eAAe,EAAE,MAAM;IACvBC,OAAO,EAAE,EAAE;IACXC,YAAY,EAAE,IAAI;IAClBC,cAAc,EAAE,MAAM;IACtBC,SAAS,EAAE;EACf,CAAC;EAEDjB,SAAS,CAAC,MAAM;IACZ,MAAMO,gBAAgB,GAAGH,SAAS,CAACc,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,EAAE,KAAKC,QAAQ,CAACV,MAAM,CAACS,EAAE,CAAC,CAAC;IAC1F,IAAID,QAAQ,EAAE;MACVX,mBAAmB,CAACW,QAAQ,CAAC;IACjC;EACJ,CAAC,EAAE,CAACf,SAAS,CAAC,CAAC;EAEf,MAAMkB,SAAS,GAAGf,gBAAgB,CAACG,MAAM,CAACa,GAAG,CAAEC,KAAK,IAAK;IACrD,oBAAO;MAAK,SAAS,EAAC,MAAM;MAAC,KAAK,EAAEZ,cAAe;MAAA,uBACvC,QAAC,SAAS;QAAC,EAAE,EAAEY,KAAK,CAACJ,EAAG;QACb,IAAI,EAAEI,KAAK,CAACf,IAAK;QACjB,OAAO,EAAEe,KAAK,CAACC,OAAQ;QACvB,KAAK,EAAED,KAAK,CAACE,KAAM;QACnB,QAAQ,EAAEF,KAAK,CAACG,QAAS;QACzB,aAAa,EAAEtB,aAAc;QAC7B,WAAW,EAAEC,WAAY;QACzB,KAAK,EAAEkB;MAAM;QAAA;QAAA;QAAA;MAAA;IACtB;MAAA;MAAA;MAAA;IAAA,QACA;EAClB,CAAC,CAAC;EAEF,oBACI;IAAA,wBACI;MAAA,WACKjB,gBAAgB,CAACE,IAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QACrB,eACL;MAAA,UACKa;IAAS;MAAA;MAAA;MAAA;IAAA,QACT;EAAA;IAAA;IAAA;IAAA;EAAA,QACH;AAEd;AAAC,GA9CQnB,YAAY;EAAA,QAKFF,SAAS;AAAA;AAAA,KALnBE,YAAY;AAgDrB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}