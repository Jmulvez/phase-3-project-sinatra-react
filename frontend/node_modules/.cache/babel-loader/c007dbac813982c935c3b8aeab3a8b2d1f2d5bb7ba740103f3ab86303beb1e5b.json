{"ast":null,"code":"var _jsxFileName = \"/home/johnm/phase-3-project-sinatra-react/frontend/src/components/DirectorPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport MovieCard from './MovieCard';\nimport NewMovie from './NewMovie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DirectorPage(_ref) {\n  _s();\n  let {\n    directors\n  } = _ref;\n  const [movies, setMovies] = useState([]);\n  const [selectedDirector, setSelectedDirector] = useState({\n    name: \"\",\n    movies: []\n  });\n  const params = useParams();\n  const movieCardStyle = {\n    backgroundColor: \"grey\",\n    padding: 80,\n    borderRadius: '5%',\n    textDecoration: 'none',\n    listStyle: 'none'\n  };\n  function handleNewMovie(newMovie) {\n    setMovies([...movies, newMovie]);\n  }\n  function handleDeleteMovie(id) {\n    const updatedMovies = movies.filter(movie => movie.id !== id);\n    setMovies(updatedMovies);\n  }\n  function handleEditedMovies(updatedMovieObj) {\n    const updatedMovies = movies.map(movie => {\n      if (movie.id === updatedMovieObj.id) {\n        return updatedMovieObj;\n      } else {\n        return movie;\n      }\n    });\n    setMovies(updatedMovies);\n  }\n  useEffect(() => {\n    fetch(\"http://localhost:9292/movies\").then(res => res.json()).then(data => setMovies(data));\n  }, []);\n  useEffect(() => {\n    const director = directors.find(director => director.id === parseInt(params.id));\n    if (director) {\n      setSelectedDirector(director);\n    }\n  }, [directors]);\n  const getMovies = selectedDirector.movies.map(movie => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      style: movieCardStyle,\n      children: /*#__PURE__*/_jsxDEV(MovieCard, {\n        id: movie.id,\n        name: movie.name,\n        runtime: movie.runtime,\n        genre: movie.genre,\n        imageUrl: movie.imageUrl,\n        onMovieDelete: handleDeleteMovie,\n        onMovieEdit: handleEditedMovies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 16\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [selectedDirector.name, \" Movies:\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: getMovies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n_s(DirectorPage, \"TlBdzZMOpSVOF+Smyh7PWXocbBU=\", false, function () {\n  return [useParams];\n});\n_c = DirectorPage;\nexport default DirectorPage;\nvar _c;\n$RefreshReg$(_c, \"DirectorPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","MovieCard","NewMovie","DirectorPage","directors","movies","setMovies","selectedDirector","setSelectedDirector","name","params","movieCardStyle","backgroundColor","padding","borderRadius","textDecoration","listStyle","handleNewMovie","newMovie","handleDeleteMovie","id","updatedMovies","filter","movie","handleEditedMovies","updatedMovieObj","map","fetch","then","res","json","data","director","find","parseInt","getMovies","runtime","genre","imageUrl"],"sources":["/home/johnm/phase-3-project-sinatra-react/frontend/src/components/DirectorPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport MovieCard from './MovieCard';\nimport NewMovie from './NewMovie';\n\nfunction DirectorPage({ directors }) {\n    const [movies, setMovies] = useState([]);\n    const [selectedDirector, setSelectedDirector] = useState({\n        name: \"\",\n        movies: []\n    });\n    const params = useParams();\n\n    const movieCardStyle = {\n        backgroundColor: \"grey\",\n        padding: 80,\n        borderRadius: '5%',\n        textDecoration: 'none',\n        listStyle: 'none'\n    }\n\n    function handleNewMovie(newMovie) {\n        setMovies([...movies, newMovie])\n      }\n\n      function handleDeleteMovie(id) {\n        const updatedMovies = movies.filter((movie) => movie.id !== id);\n        setMovies(updatedMovies);\n      }\n\n      function handleEditedMovies(updatedMovieObj) {\n        const updatedMovies = movies.map((movie) => {\n          if (movie.id === updatedMovieObj.id) {\n            return updatedMovieObj;\n          } else {\n            return movie;\n          }\n        });\n        setMovies(updatedMovies);\n      }\n\n      useEffect(() => {\n        fetch(\"http://localhost:9292/movies\")\n        .then((res) => res.json())\n        .then(data => setMovies(data))\n      }, []);\n\n    useEffect(() => {\n        const director = directors.find((director) => director.id === parseInt(params.id))\n        if (director) {\n            setSelectedDirector(director)\n        }\n    }, [directors]);\n\n    const getMovies = selectedDirector.movies.map((movie) => {\n        return <div className=\"card\" style={movieCardStyle}>\n                    <MovieCard id={movie.id}\n                               name={movie.name}\n                               runtime={movie.runtime}\n                               genre={movie.genre}\n                               imageUrl={movie.imageUrl}\n                               onMovieDelete={handleDeleteMovie}\n                               onMovieEdit={handleEditedMovies}\n                    />\n                </div>\n    })\n\n    return (\n        <div>\n            <h1>\n                {selectedDirector.name} Movies:\n            </h1>\n            <ul>\n                {getMovies}\n            </ul>\n        </div>\n    )\n}\n\nexport default DirectorPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}